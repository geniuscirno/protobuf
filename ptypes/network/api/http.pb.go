// Code generated by protoc-gen-go. DO NOT EDIT.
// source: http.proto

/*
Package network_api is a generated protocol buffer package.

It is generated from these files:
	http.proto

It has these top-level messages:
	Http
	HttpRule
*/
package network_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Http struct {
	Rules []*HttpRule `protobuf:"bytes,1,rep,name=rules" json:"rules,omitempty"`
}

func (m *Http) Reset()                    { *m = Http{} }
func (m *Http) String() string            { return proto.CompactTextString(m) }
func (*Http) ProtoMessage()               {}
func (*Http) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Http) GetRules() []*HttpRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type HttpRule struct {
	// string selector = 1;
	//
	// Types that are valid to be assigned to Pattern:
	//	*HttpRule_Get
	//	*HttpRule_Put
	//	*HttpRule_Post
	//	*HttpRule_Delete
	//	*HttpRule_Patch
	Pattern isHttpRule_Pattern `protobuf_oneof:"pattern"`
	// string action = 7;
	Auth string `protobuf:"bytes,8,opt,name=auth" json:"auth,omitempty"`
}

func (m *HttpRule) Reset()                    { *m = HttpRule{} }
func (m *HttpRule) String() string            { return proto.CompactTextString(m) }
func (*HttpRule) ProtoMessage()               {}
func (*HttpRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isHttpRule_Pattern interface {
	isHttpRule_Pattern()
}

type HttpRule_Get struct {
	Get string `protobuf:"bytes,2,opt,name=get,oneof"`
}
type HttpRule_Put struct {
	Put string `protobuf:"bytes,3,opt,name=put,oneof"`
}
type HttpRule_Post struct {
	Post string `protobuf:"bytes,4,opt,name=post,oneof"`
}
type HttpRule_Delete struct {
	Delete string `protobuf:"bytes,5,opt,name=delete,oneof"`
}
type HttpRule_Patch struct {
	Patch string `protobuf:"bytes,6,opt,name=patch,oneof"`
}

func (*HttpRule_Get) isHttpRule_Pattern()    {}
func (*HttpRule_Put) isHttpRule_Pattern()    {}
func (*HttpRule_Post) isHttpRule_Pattern()   {}
func (*HttpRule_Delete) isHttpRule_Pattern() {}
func (*HttpRule_Patch) isHttpRule_Pattern()  {}

func (m *HttpRule) GetPattern() isHttpRule_Pattern {
	if m != nil {
		return m.Pattern
	}
	return nil
}

func (m *HttpRule) GetGet() string {
	if x, ok := m.GetPattern().(*HttpRule_Get); ok {
		return x.Get
	}
	return ""
}

func (m *HttpRule) GetPut() string {
	if x, ok := m.GetPattern().(*HttpRule_Put); ok {
		return x.Put
	}
	return ""
}

func (m *HttpRule) GetPost() string {
	if x, ok := m.GetPattern().(*HttpRule_Post); ok {
		return x.Post
	}
	return ""
}

func (m *HttpRule) GetDelete() string {
	if x, ok := m.GetPattern().(*HttpRule_Delete); ok {
		return x.Delete
	}
	return ""
}

func (m *HttpRule) GetPatch() string {
	if x, ok := m.GetPattern().(*HttpRule_Patch); ok {
		return x.Patch
	}
	return ""
}

func (m *HttpRule) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HttpRule) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HttpRule_OneofMarshaler, _HttpRule_OneofUnmarshaler, _HttpRule_OneofSizer, []interface{}{
		(*HttpRule_Get)(nil),
		(*HttpRule_Put)(nil),
		(*HttpRule_Post)(nil),
		(*HttpRule_Delete)(nil),
		(*HttpRule_Patch)(nil),
	}
}

func _HttpRule_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HttpRule)
	// pattern
	switch x := m.Pattern.(type) {
	case *HttpRule_Get:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Get)
	case *HttpRule_Put:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Put)
	case *HttpRule_Post:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Post)
	case *HttpRule_Delete:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Delete)
	case *HttpRule_Patch:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Patch)
	case nil:
	default:
		return fmt.Errorf("HttpRule.Pattern has unexpected type %T", x)
	}
	return nil
}

func _HttpRule_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HttpRule)
	switch tag {
	case 2: // pattern.get
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Get{x}
		return true, err
	case 3: // pattern.put
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Put{x}
		return true, err
	case 4: // pattern.post
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Post{x}
		return true, err
	case 5: // pattern.delete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Delete{x}
		return true, err
	case 6: // pattern.patch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Pattern = &HttpRule_Patch{x}
		return true, err
	default:
		return false, nil
	}
}

func _HttpRule_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HttpRule)
	// pattern
	switch x := m.Pattern.(type) {
	case *HttpRule_Get:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Get)))
		n += len(x.Get)
	case *HttpRule_Put:
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Put)))
		n += len(x.Put)
	case *HttpRule_Post:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Post)))
		n += len(x.Post)
	case *HttpRule_Delete:
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Delete)))
		n += len(x.Delete)
	case *HttpRule_Patch:
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Patch)))
		n += len(x.Patch)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

var E_Http = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*HttpRule)(nil),
	Field:         72295728,
	Name:          "network.api.http",
	Tag:           "bytes,72295728,opt,name=http",
	Filename:      "http.proto",
}

func init() {
	proto.RegisterType((*Http)(nil), "network.api.Http")
	proto.RegisterType((*HttpRule)(nil), "network.api.HttpRule")
	proto.RegisterExtension(E_Http)
}

func init() { proto.RegisterFile("http.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4d, 0x4a, 0xc4, 0x40,
	0x10, 0x85, 0x8d, 0xf9, 0x71, 0xa6, 0x66, 0x57, 0xa8, 0x34, 0x2e, 0x24, 0x64, 0x35, 0x20, 0xf4,
	0x80, 0xb3, 0x73, 0xe9, 0x6a, 0x16, 0x8a, 0x90, 0x1b, 0x64, 0x26, 0x65, 0x12, 0x0c, 0xe9, 0xa2,
	0x53, 0x8d, 0x67, 0xf1, 0x16, 0x1e, 0xc0, 0x13, 0x78, 0x2a, 0xe9, 0x4e, 0x02, 0x6e, 0x66, 0xd7,
	0xdf, 0x57, 0xaf, 0x0b, 0x5e, 0x01, 0xb4, 0x22, 0xac, 0xd9, 0x1a, 0x31, 0xb8, 0x19, 0x48, 0x3e,
	0x8d, 0xfd, 0xd0, 0x15, 0x77, 0x77, 0x79, 0x63, 0x4c, 0xd3, 0xd3, 0x2e, 0x8c, 0x8e, 0xee, 0x7d,
	0x57, 0xd3, 0x78, 0xb2, 0x1d, 0x8b, 0xb1, 0x53, 0xbc, 0xd8, 0x43, 0x72, 0x10, 0x61, 0x7c, 0x80,
	0xd4, 0xba, 0x9e, 0x46, 0x15, 0xe5, 0xf1, 0x76, 0xf3, 0x78, 0xa3, 0xff, 0xad, 0xd1, 0x3e, 0x51,
	0xba, 0x9e, 0xca, 0x29, 0x53, 0x7c, 0x45, 0xb0, 0x5a, 0x1c, 0x22, 0xc4, 0x0d, 0x89, 0xba, 0xcc,
	0xa3, 0xed, 0xfa, 0x70, 0x51, 0x7a, 0xf0, 0x8e, 0x9d, 0xa8, 0x78, 0x71, 0xec, 0x04, 0xaf, 0x21,
	0x61, 0x33, 0x8a, 0x4a, 0x66, 0x19, 0x08, 0x15, 0x64, 0x35, 0xf5, 0x24, 0xa4, 0xd2, 0xd9, 0xcf,
	0x8c, 0xb7, 0x90, 0x72, 0x25, 0xa7, 0x56, 0x65, 0xf3, 0x60, 0x42, 0x44, 0x48, 0x2a, 0x27, 0xad,
	0x5a, 0x79, 0x5d, 0x86, 0xf7, 0xf3, 0x1a, 0xae, 0xb8, 0x12, 0x21, 0x3b, 0x3c, 0xbd, 0x40, 0xe2,
	0xaf, 0x81, 0xf7, 0x7a, 0xea, 0xae, 0x97, 0xee, 0xfa, 0x95, 0xa4, 0x35, 0xf5, 0x1b, 0x4b, 0x67,
	0x86, 0x51, 0x7d, 0xff, 0xfe, 0x14, 0x79, 0x74, 0xbe, 0x6a, 0xd8, 0x72, 0xcc, 0xc2, 0xef, 0xfd,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x49, 0x58, 0x3d, 0xd9, 0x62, 0x01, 0x00, 0x00,
}
